//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infrastructure.Services.PatientManagerServices.PublisherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageWrapper", Namespace="http://schemas.datacontract.org/2004/07/PublisherSubscriberService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.FindPatientsBySearchTextQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetAllPatientsQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetAllPatientVisitsQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetContactInfoByPatientQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetHealthIdByPatientQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetPatientVisitByIdQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetPatientByIdQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Queries.GetPatientVisitsByPatientQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.ContactInfoChangedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.HealthcardChangedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.NewPatientRegisteredEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.PatientIdentityChangedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.PatientRemovedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.PatientVisitChangedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.PatientVisitedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Events.PatientVisitRemovedEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Dto.ContactInfoDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Dto.HealthIdentificationDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Dto.PatientDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Dto.PatientVisitDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ValueObjects.ContactInformation.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ValueObjects.ContactInformation.PhoneNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ValueObjects.Health.Healthcard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ValueObjects.Health.GenderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.AddPatientCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.MessageNotifyOnCompletion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.AddPatientVisitCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.DeletePatientCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.DeletePatientVisitCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.MessageCompletedEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.UpdateContactInformationCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.UpdatePatientCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.UpdatePatientVisitCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatientManager.Contract.Commands.UpdateHealthIdCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.EventArgs))]
    public partial class MessageWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeField, value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.PatientManagerServices.PublisherService.IPublisher", CallbackContract=typeof(Infrastructure.Services.PatientManagerServices.PublisherService.IPublisherCallback))]
    public interface IPublisher {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisher/Subscribe", ReplyAction="http://tempuri.org/IPublisher/SubscribeResponse")]
        void Subscribe(string messageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisher/Subscribe", ReplyAction="http://tempuri.org/IPublisher/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync(string messageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisher/Unsubscribe", ReplyAction="http://tempuri.org/IPublisher/UnsubscribeResponse")]
        void Unsubscribe(string messageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisher/Unsubscribe", ReplyAction="http://tempuri.org/IPublisher/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync(string messageType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublisherCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPublisher/MessageHandler")]
        void MessageHandler(Infrastructure.Services.PatientManagerServices.PublisherService.MessageWrapper messageWrapper);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublisherChannel : Infrastructure.Services.PatientManagerServices.PublisherService.IPublisher, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublisherClient : System.ServiceModel.DuplexClientBase<Infrastructure.Services.PatientManagerServices.PublisherService.IPublisher>, Infrastructure.Services.PatientManagerServices.PublisherService.IPublisher {
        
        public PublisherClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PublisherClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PublisherClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PublisherClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PublisherClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe(string messageType) {
            base.Channel.Subscribe(messageType);
        }
        
        public System.Threading.Tasks.Task SubscribeAsync(string messageType) {
            return base.Channel.SubscribeAsync(messageType);
        }
        
        public void Unsubscribe(string messageType) {
            base.Channel.Unsubscribe(messageType);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(string messageType) {
            return base.Channel.UnsubscribeAsync(messageType);
        }
    }
}
